<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
chan drive_inLane, continue_drive, stop, nominal_distance;
urgent chan detectTruckEntry,  detectTruckExit, create_safe_distance;
//var used in communication

int nominalDistance =  1;
int endTripStop =1;
bool truckEntry =true;
bool truckExit =true;</declaration>
	<template>
		<name>highwayCommunication</name>
		<declaration>clock x,y;</declaration>
		<location id="id0" x="-807" y="-348">
			<name x="-832" y="-339">driveLane</name>
		</location>
		<location id="id1" x="-476" y="-187">
			<name x="-510" y="-178">sendSignal</name>
		</location>
		<location id="id2" x="-476" y="-348">
			<name x="-501" y="-340">drive</name>
		</location>
		<location id="id3" x="-442" y="-8">
			<name x="-501" y="0">entryVehicle</name>
		</location>
		<location id="id4" x="0" y="-17">
			<name x="-25" y="0">endTrip</name>
		</location>
		<location id="id5" x="-25" y="-238">
			<name x="-8" y="-238">exitVehicle</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="guard" x="-102" y="-59">endTripStop ==1</label>
			<label kind="synchronisation" x="-68" y="-25">stop?</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-586" y="59">continue_drive?</label>
			<nail x="-578" y="17"/>
			<nail x="-433" y="85"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id2"/>
			<label kind="guard" x="-348" y="-204">nominalDistance == 1</label>
			<label kind="synchronisation" x="-348" y="-187">nominal_distance?</label>
			<label kind="assignment" x="-348" y="-170">endTripStop ==0</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id5"/>
			<label kind="guard" x="-374" y="-59">truckExit == true</label>
			<label kind="synchronisation" x="-374" y="-42">detectTruckExit?</label>
			<label kind="assignment" x="-374" y="-25">truckExit == false</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-620" y="-93">create_safe_distance?</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-595" y="-306">truckEntry == true</label>
			<label kind="synchronisation" x="-595" y="-289">detectTruckEntry?</label>
			<label kind="assignment" x="-595" y="-263">truckEntry == false</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-620" y="-374">drive_inLane?</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Truck</name>
		<declaration>// Place local declarations here.
clock detect;</declaration>
		<location id="id6" x="-603" y="-119">
			<name x="-637" y="-102">startTrip</name>
		</location>
		<location id="id7" x="-297" y="-119">
			<name x="-314" y="-110">laneDrive</name>
		</location>
		<location id="id8" x="-297" y="102">
			<name x="-339" y="111">send_signal_Entry</name>
		</location>
		<location id="id9" x="-34" y="-85">
			<name x="-17" y="-102">vehicleEntry</name>
		</location>
		<location id="id10" x="-578" y="136">
			<name x="-604" y="153">VehicleExit</name>
		</location>
		<location id="id11" x="-25" y="76">
			<name x="-8" y="85">send_signal_Exit</name>
		</location>
		<location id="id12" x="-748" y="136">
			<name x="-758" y="102">End_trip</name>
		</location>
		<init ref="id6"/>
		<transition>
			<source ref="id10"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-671" y="119">stop!</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id10"/>
			<nail x="-25" y="204"/>
			<nail x="-578" y="204"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-16" y="-17">detectTruckExit!</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-560" y="-9">nominal_distance!</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-204" y="-17">create_safe_distance!</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-348" y="-255">continue_drive!</label>
			<nail x="-246" y="-229"/>
			<nail x="-356" y="-229"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-518" y="-136">drive_inLane!</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-348" y="-25">detectTruckEntry!</label>
		</transition>
	</template>
	<system>// Place template instantiations here.

leadTruck = Truck();
autoTruck1 = Truck();
autoTruck2 = Truck();
autoTruck3 = Truck();
masterTruck = highwayCommunication();
truckOne = highwayCommunication();
truckTwo = highwayCommunication();
truckThree = highwayCommunication();
// List one or more processes to be composed into a system.
system leadTruck, autoTruck1 , autoTruck2, autoTruck3, truckThree , truckTwo, truckOne, masterTruck;</system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
